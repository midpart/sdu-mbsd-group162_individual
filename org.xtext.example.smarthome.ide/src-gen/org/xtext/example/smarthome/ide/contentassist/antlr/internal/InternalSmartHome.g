/*
 * generated by Xtext 2.38.0
 */
grammar InternalSmartHome;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.smarthome.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.smarthome.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.smarthome.services.SmartHomeGrammarAccess;

}
@parser::members {
	private SmartHomeGrammarAccess grammarAccess;

	public void setGrammarAccess(SmartHomeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleController
entryRuleController
:
{ before(grammarAccess.getControllerRule()); }
	 ruleController
{ after(grammarAccess.getControllerRule()); } 
	 EOF 
;

// Rule Controller
ruleController 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getControllerAccess().getGroup()); }
		(rule__Controller__Group__0)
		{ after(grammarAccess.getControllerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoom
entryRuleRoom
:
{ before(grammarAccess.getRoomRule()); }
	 ruleRoom
{ after(grammarAccess.getRoomRule()); } 
	 EOF 
;

// Rule Room
ruleRoom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomAccess().getGroup()); }
		(rule__Room__Group__0)
		{ after(grammarAccess.getRoomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoomInheritance
entryRuleRoomInheritance
:
{ before(grammarAccess.getRoomInheritanceRule()); }
	 ruleRoomInheritance
{ after(grammarAccess.getRoomInheritanceRule()); } 
	 EOF 
;

// Rule RoomInheritance
ruleRoomInheritance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomInheritanceAccess().getGroup()); }
		(rule__RoomInheritance__Group__0)
		{ after(grammarAccess.getRoomInheritanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoomInheritanceDetails
entryRuleRoomInheritanceDetails
:
{ before(grammarAccess.getRoomInheritanceDetailsRule()); }
	 ruleRoomInheritanceDetails
{ after(grammarAccess.getRoomInheritanceDetailsRule()); } 
	 EOF 
;

// Rule RoomInheritanceDetails
ruleRoomInheritanceDetails 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomInheritanceDetailsAccess().getGroup()); }
		(rule__RoomInheritanceDetails__Group__0)
		{ after(grammarAccess.getRoomInheritanceDetailsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceInheritance
entryRuleDeviceInheritance
:
{ before(grammarAccess.getDeviceInheritanceRule()); }
	 ruleDeviceInheritance
{ after(grammarAccess.getDeviceInheritanceRule()); } 
	 EOF 
;

// Rule DeviceInheritance
ruleDeviceInheritance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceInheritanceAccess().getGroup()); }
		(rule__DeviceInheritance__Group__0)
		{ after(grammarAccess.getDeviceInheritanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceInheritanceDetails
entryRuleDeviceInheritanceDetails
:
{ before(grammarAccess.getDeviceInheritanceDetailsRule()); }
	 ruleDeviceInheritanceDetails
{ after(grammarAccess.getDeviceInheritanceDetailsRule()); } 
	 EOF 
;

// Rule DeviceInheritanceDetails
ruleDeviceInheritanceDetails 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getGroup()); }
		(rule__DeviceInheritanceDetails__Group__0)
		{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getGroup()); }
		(rule__Device__Group__0)
		{ after(grammarAccess.getDeviceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getBooleanExpParserRuleCall()); }
		ruleBooleanExp
		{ after(grammarAccess.getExpAccess().getBooleanExpParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp
:
{ before(grammarAccess.getBooleanExpRule()); }
	 ruleBooleanExp
{ after(grammarAccess.getBooleanExpRule()); } 
	 EOF 
;

// Rule BooleanExp
ruleBooleanExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpAccess().getGroup()); }
		(rule__BooleanExp__Group__0)
		{ after(grammarAccess.getBooleanExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndCondition
entryRuleAndCondition
:
{ before(grammarAccess.getAndConditionRule()); }
	 ruleAndCondition
{ after(grammarAccess.getAndConditionRule()); } 
	 EOF 
;

// Rule AndCondition
ruleAndCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndConditionAccess().getGroup()); }
		(rule__AndCondition__Group__0)
		{ after(grammarAccess.getAndConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
		(rule__Type__NameAssignment)
		{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyType
entryRulePropertyType
:
{ before(grammarAccess.getPropertyTypeRule()); }
	 rulePropertyType
{ after(grammarAccess.getPropertyTypeRule()); } 
	 EOF 
;

// Rule PropertyType
rulePropertyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getNameAssignment()); }
		(rule__PropertyType__NameAssignment)
		{ after(grammarAccess.getPropertyTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndConditionAccess().getGroup_1_0()); }
		(rule__AndCondition__Group_1_0__0)
		{ after(grammarAccess.getAndConditionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndConditionAccess().getGroup_1_1()); }
		(rule__AndCondition__Group_1_1__0)
		{ after(grammarAccess.getAndConditionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameBoolKeyword_0_0()); }
		'bool'
		{ after(grammarAccess.getTypeAccess().getNameBoolKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNameIntegerKeyword_0_1()); }
		'integer'
		{ after(grammarAccess.getTypeAccess().getNameIntegerKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNameDoubleKeyword_0_2()); }
		'double'
		{ after(grammarAccess.getTypeAccess().getNameDoubleKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNameStringKeyword_0_3()); }
		'string'
		{ after(grammarAccess.getTypeAccess().getNameStringKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getNamePrivateKeyword_0_0()); }
		'private'
		{ after(grammarAccess.getPropertyTypeAccess().getNamePrivateKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyTypeAccess().getNamePublicKeyword_0_1()); }
		'public'
		{ after(grammarAccess.getPropertyTypeAccess().getNamePublicKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__0__Impl
	rule__Controller__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getSmartHomeControllerKeyword_0()); }
	'SmartHomeController'
	{ after(grammarAccess.getControllerAccess().getSmartHomeControllerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__1__Impl
	rule__Controller__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getNameAssignment_1()); }
	(rule__Controller__NameAssignment_1)
	{ after(grammarAccess.getControllerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__2__Impl
	rule__Controller__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getControllerAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__3__Impl
	rule__Controller__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getRoomsAssignment_3()); }
	(rule__Controller__RoomsAssignment_3)*
	{ after(grammarAccess.getControllerAccess().getRoomsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Controller__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControllerAccess().getRoomInheritanceAssignment_4()); }
	(rule__Controller__RoomInheritanceAssignment_4)?
	{ after(grammarAccess.getControllerAccess().getRoomInheritanceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__0__Impl
	rule__Room__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
	'Room'
	{ after(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__1__Impl
	rule__Room__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getNameAssignment_1()); }
	(rule__Room__NameAssignment_1)
	{ after(grammarAccess.getRoomAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__2__Impl
	rule__Room__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getWhereKeyword_2()); }
	'where'
	{ after(grammarAccess.getRoomAccess().getWhereKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__3__Impl
	rule__Room__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getPropertiesKeyword_3()); }
	'properties:'
	{ after(grammarAccess.getRoomAccess().getPropertiesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__4__Impl
	rule__Room__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getPropertiesAssignment_4()); }
	(rule__Room__PropertiesAssignment_4)*
	{ after(grammarAccess.getRoomAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__5__Impl
	rule__Room__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getDevicesAssignment_5()); }
	(rule__Room__DevicesAssignment_5)*
	{ after(grammarAccess.getRoomAccess().getDevicesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getDeviceInheritanceAssignment_6()); }
	(rule__Room__DeviceInheritanceAssignment_6)?
	{ after(grammarAccess.getRoomAccess().getDeviceInheritanceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoomInheritance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritance__Group__0__Impl
	rule__RoomInheritance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceAccess().getRoomKeyword_0()); }
	'room'
	{ after(grammarAccess.getRoomInheritanceAccess().getRoomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritance__Group__1__Impl
	rule__RoomInheritance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceAccess().getInheritanceKeyword_1()); }
	'inheritance:'
	{ after(grammarAccess.getRoomInheritanceAccess().getInheritanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceAccess().getInheritancesAssignment_2()); }
	(rule__RoomInheritance__InheritancesAssignment_2)*
	{ after(grammarAccess.getRoomInheritanceAccess().getInheritancesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoomInheritanceDetails__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritanceDetails__Group__0__Impl
	rule__RoomInheritanceDetails__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildAssignment_0()); }
	(rule__RoomInheritanceDetails__RoomChildAssignment_0)
	{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritanceDetails__Group__1__Impl
	rule__RoomInheritanceDetails__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceDetailsAccess().getExtendsKeyword_1()); }
	'extends'
	{ after(grammarAccess.getRoomInheritanceDetailsAccess().getExtendsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritanceDetails__Group__2__Impl
	rule__RoomInheritanceDetails__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceDetailsAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getRoomInheritanceDetailsAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomInheritanceDetails__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentAssignment_3()); }
	(rule__RoomInheritanceDetails__RoomParentAssignment_3)
	{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceInheritance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritance__Group__0__Impl
	rule__DeviceInheritance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceAccess().getDeviceKeyword_0()); }
	'device'
	{ after(grammarAccess.getDeviceInheritanceAccess().getDeviceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritance__Group__1__Impl
	rule__DeviceInheritance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceAccess().getInheritanceKeyword_1()); }
	'inheritance:'
	{ after(grammarAccess.getDeviceInheritanceAccess().getInheritanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceAccess().getInheritancesAssignment_2()); }
	(rule__DeviceInheritance__InheritancesAssignment_2)*
	{ after(grammarAccess.getDeviceInheritanceAccess().getInheritancesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceInheritanceDetails__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritanceDetails__Group__0__Impl
	rule__DeviceInheritanceDetails__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildAssignment_0()); }
	(rule__DeviceInheritanceDetails__DeviceChildAssignment_0)
	{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritanceDetails__Group__1__Impl
	rule__DeviceInheritanceDetails__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getExtendsKeyword_1()); }
	'extends'
	{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getExtendsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritanceDetails__Group__2__Impl
	rule__DeviceInheritanceDetails__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceInheritanceDetails__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentAssignment_3()); }
	(rule__DeviceInheritanceDetails__DeviceParentAssignment_3)
	{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__0__Impl
	rule__Device__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
	'Device'
	{ after(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__1__Impl
	rule__Device__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
	(rule__Device__NameAssignment_1)
	{ after(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__2__Impl
	rule__Device__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getWhereKeyword_2()); }
	'where'
	{ after(grammarAccess.getDeviceAccess().getWhereKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__3__Impl
	rule__Device__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getPropertiesKeyword_3()); }
	'properties:'
	{ after(grammarAccess.getDeviceAccess().getPropertiesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__4__Impl
	rule__Device__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getPropertiesAssignment_4()); }
	(rule__Device__PropertiesAssignment_4)*
	{ after(grammarAccess.getDeviceAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__5__Impl
	rule__Device__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getActionsKeyword_5()); }
	('Actions:')?
	{ after(grammarAccess.getDeviceAccess().getActionsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__6__Impl
	rule__Device__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getActionsAssignment_6()); }
	(rule__Device__ActionsAssignment_6)*
	{ after(grammarAccess.getDeviceAccess().getActionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__7__Impl
	rule__Device__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getConstraintsKeyword_7()); }
	('constraints:')?
	{ after(grammarAccess.getDeviceAccess().getConstraintsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getExpAssignment_8()); }
	(rule__Device__ExpAssignment_8)*
	{ after(grammarAccess.getDeviceAccess().getExpAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getDoKeyword_0()); }
	'do'
	{ after(grammarAccess.getActionAccess().getDoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPrTypeAssignment_0()); }
	(rule__Property__PrTypeAssignment_0)?
	{ after(grammarAccess.getPropertyAccess().getPrTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
	(rule__Property__NameAssignment_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
	(rule__Property__TypeAssignment_3)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group__0__Impl
	rule__BooleanExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getAndConditionParserRuleCall_0()); }
	ruleAndCondition
	{ after(grammarAccess.getBooleanExpAccess().getAndConditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getGroup_1()); }
	(rule__BooleanExp__Group_1__0)*
	{ after(grammarAccess.getBooleanExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1__0__Impl
	rule__BooleanExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getANDLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanExpAccess().getANDLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1__1__Impl
	rule__BooleanExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getANDKeyword_1_1()); }
	'AND'
	{ after(grammarAccess.getBooleanExpAccess().getANDKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpAccess().getRightAssignment_1_2()); }
	(rule__BooleanExp__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanExpAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group__0__Impl
	rule__AndCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getAtomicParserRuleCall_0()); }
	ruleAtomic
	{ after(grammarAccess.getAndConditionAccess().getAtomicParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getAlternatives_1()); }
	(rule__AndCondition__Alternatives_1)*
	{ after(grammarAccess.getAndConditionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_0__0__Impl
	rule__AndCondition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getGTLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getAndConditionAccess().getGTLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_0__1__Impl
	rule__AndCondition__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getGreaterThanSignKeyword_1_0_1()); }
	'>'
	{ after(grammarAccess.getAndConditionAccess().getGreaterThanSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getRightAssignment_1_0_2()); }
	(rule__AndCondition__RightAssignment_1_0_2)
	{ after(grammarAccess.getAndConditionAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_1__0__Impl
	rule__AndCondition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getLTLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getAndConditionAccess().getLTLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_1__1__Impl
	rule__AndCondition__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getLessThanSignKeyword_1_1_1()); }
	'<'
	{ after(grammarAccess.getAndConditionAccess().getLessThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getRightAssignment_1_1_2()); }
	(rule__AndCondition__RightAssignment_1_1_2)
	{ after(grammarAccess.getAndConditionAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getMyNumberAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getMyNumberAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVarRefAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVarRefAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getParenthesisAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getParenthesisAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1()); }
	ruleExp
	{ after(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Controller__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__RoomsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getRoomsRoomParserRuleCall_3_0()); }
		ruleRoom
		{ after(grammarAccess.getControllerAccess().getRoomsRoomParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Controller__RoomInheritanceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControllerAccess().getRoomInheritanceRoomInheritanceParserRuleCall_4_0()); }
		ruleRoomInheritance
		{ after(grammarAccess.getControllerAccess().getRoomInheritanceRoomInheritanceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getPropertiesPropertyParserRuleCall_4_0()); }
		ruleProperty
		{ after(grammarAccess.getRoomAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__DevicesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getDevicesDeviceParserRuleCall_5_0()); }
		ruleDevice
		{ after(grammarAccess.getRoomAccess().getDevicesDeviceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__DeviceInheritanceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getDeviceInheritanceDeviceInheritanceParserRuleCall_6_0()); }
		ruleDeviceInheritance
		{ after(grammarAccess.getRoomAccess().getDeviceInheritanceDeviceInheritanceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritance__InheritancesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomInheritanceAccess().getInheritancesRoomInheritanceDetailsParserRuleCall_2_0()); }
		ruleRoomInheritanceDetails
		{ after(grammarAccess.getRoomInheritanceAccess().getInheritancesRoomInheritanceDetailsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__RoomChildAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildRoomCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildRoomIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildRoomIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildRoomCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomInheritanceDetails__RoomParentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentRoomCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentRoomIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentRoomIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentRoomCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritance__InheritancesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceInheritanceAccess().getInheritancesDeviceInheritanceDetailsParserRuleCall_2_0()); }
		ruleDeviceInheritanceDetails
		{ after(grammarAccess.getDeviceInheritanceAccess().getInheritancesDeviceInheritanceDetailsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__DeviceChildAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildDeviceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildDeviceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildDeviceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildDeviceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceInheritanceDetails__DeviceParentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentDeviceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentDeviceIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentDeviceIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentDeviceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getPropertiesPropertyParserRuleCall_4_0()); }
		ruleProperty
		{ after(grammarAccess.getDeviceAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__ActionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getActionsActionParserRuleCall_6_0()); }
		ruleAction
		{ after(grammarAccess.getDeviceAccess().getActionsActionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__ExpAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getExpExpParserRuleCall_8_0()); }
		ruleExp
		{ after(grammarAccess.getDeviceAccess().getExpExpParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__PrTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getPrTypePropertyTypeParserRuleCall_0_0()); }
		rulePropertyType
		{ after(grammarAccess.getPropertyAccess().getPrTypePropertyTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getRightAndConditionParserRuleCall_1_2_0()); }
		ruleAndCondition
		{ after(grammarAccess.getBooleanExpAccess().getRightAndConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_0_2_0()); }
		ruleAtomic
		{ after(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_1_2_0()); }
		ruleAtomic
		{ after(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValuePropertyCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getValuePropertyIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getValuePropertyIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getValuePropertyCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueParenthesisParserRuleCall_2_1_0()); }
		ruleParenthesis
		{ after(grammarAccess.getAtomicAccess().getValueParenthesisParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameAlternatives_0()); }
		(rule__Type__NameAlternatives_0)
		{ after(grammarAccess.getTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getNameAlternatives_0()); }
		(rule__PropertyType__NameAlternatives_0)
		{ after(grammarAccess.getPropertyTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

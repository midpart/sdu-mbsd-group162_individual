/**
 * generated by Xtext 2.38.0
 */
package org.xtext.example.smarthome.smartHome.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.smarthome.smartHome.Device;
import org.xtext.example.smarthome.smartHome.DeviceInheritanceDetails;
import org.xtext.example.smarthome.smartHome.SmartHomePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Device Inheritance Details</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.DeviceInheritanceDetailsImpl#getDeviceChild <em>Device Child</em>}</li>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.DeviceInheritanceDetailsImpl#getDeviceParent <em>Device Parent</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeviceInheritanceDetailsImpl extends MinimalEObjectImpl.Container implements DeviceInheritanceDetails
{
  /**
   * The cached value of the '{@link #getDeviceChild() <em>Device Child</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeviceChild()
   * @generated
   * @ordered
   */
  protected Device deviceChild;

  /**
   * The cached value of the '{@link #getDeviceParent() <em>Device Parent</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeviceParent()
   * @generated
   * @ordered
   */
  protected Device deviceParent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeviceInheritanceDetailsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmartHomePackage.Literals.DEVICE_INHERITANCE_DETAILS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Device getDeviceChild()
  {
    if (deviceChild != null && deviceChild.eIsProxy())
    {
      InternalEObject oldDeviceChild = (InternalEObject)deviceChild;
      deviceChild = (Device)eResolveProxy(oldDeviceChild);
      if (deviceChild != oldDeviceChild)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD, oldDeviceChild, deviceChild));
      }
    }
    return deviceChild;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Device basicGetDeviceChild()
  {
    return deviceChild;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeviceChild(Device newDeviceChild)
  {
    Device oldDeviceChild = deviceChild;
    deviceChild = newDeviceChild;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD, oldDeviceChild, deviceChild));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Device getDeviceParent()
  {
    if (deviceParent != null && deviceParent.eIsProxy())
    {
      InternalEObject oldDeviceParent = (InternalEObject)deviceParent;
      deviceParent = (Device)eResolveProxy(oldDeviceParent);
      if (deviceParent != oldDeviceParent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT, oldDeviceParent, deviceParent));
      }
    }
    return deviceParent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Device basicGetDeviceParent()
  {
    return deviceParent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeviceParent(Device newDeviceParent)
  {
    Device oldDeviceParent = deviceParent;
    deviceParent = newDeviceParent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT, oldDeviceParent, deviceParent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD:
        if (resolve) return getDeviceChild();
        return basicGetDeviceChild();
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT:
        if (resolve) return getDeviceParent();
        return basicGetDeviceParent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD:
        setDeviceChild((Device)newValue);
        return;
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT:
        setDeviceParent((Device)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD:
        setDeviceChild((Device)null);
        return;
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT:
        setDeviceParent((Device)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_CHILD:
        return deviceChild != null;
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS__DEVICE_PARENT:
        return deviceParent != null;
    }
    return super.eIsSet(featureID);
  }

} //DeviceInheritanceDetailsImpl

/**
 * generated by Xtext 2.38.0
 */
package org.xtext.example.smarthome.smartHome.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.smarthome.smartHome.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SmartHomeFactoryImpl extends EFactoryImpl implements SmartHomeFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SmartHomeFactory init()
  {
    try
    {
      SmartHomeFactory theSmartHomeFactory = (SmartHomeFactory)EPackage.Registry.INSTANCE.getEFactory(SmartHomePackage.eNS_URI);
      if (theSmartHomeFactory != null)
      {
        return theSmartHomeFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SmartHomeFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SmartHomeFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SmartHomePackage.CONTROLLER: return createController();
      case SmartHomePackage.ROOM: return createRoom();
      case SmartHomePackage.ROOM_INHERITANCE: return createRoomInheritance();
      case SmartHomePackage.ROOM_INHERITANCE_DETAILS: return createRoomInheritanceDetails();
      case SmartHomePackage.DEVICE_INHERITANCE: return createDeviceInheritance();
      case SmartHomePackage.DEVICE_INHERITANCE_DETAILS: return createDeviceInheritanceDetails();
      case SmartHomePackage.DEVICE: return createDevice();
      case SmartHomePackage.ACTION: return createAction();
      case SmartHomePackage.PROPERTY: return createProperty();
      case SmartHomePackage.DEV_PROPERTY: return createDevProperty();
      case SmartHomePackage.EXPRESSION: return createExpression();
      case SmartHomePackage.TYPE: return createType();
      case SmartHomePackage.PROPERTY_TYPE: return createPropertyType();
      case SmartHomePackage.AND: return createAND();
      case SmartHomePackage.GT: return createGT();
      case SmartHomePackage.LT: return createLT();
      case SmartHomePackage.MY_NUMBER: return createMyNumber();
      case SmartHomePackage.VAR_REF: return createVarRef();
      case SmartHomePackage.PARENTHESIS: return createParenthesis();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Controller createController()
  {
    ControllerImpl controller = new ControllerImpl();
    return controller;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Room createRoom()
  {
    RoomImpl room = new RoomImpl();
    return room;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RoomInheritance createRoomInheritance()
  {
    RoomInheritanceImpl roomInheritance = new RoomInheritanceImpl();
    return roomInheritance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RoomInheritanceDetails createRoomInheritanceDetails()
  {
    RoomInheritanceDetailsImpl roomInheritanceDetails = new RoomInheritanceDetailsImpl();
    return roomInheritanceDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeviceInheritance createDeviceInheritance()
  {
    DeviceInheritanceImpl deviceInheritance = new DeviceInheritanceImpl();
    return deviceInheritance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeviceInheritanceDetails createDeviceInheritanceDetails()
  {
    DeviceInheritanceDetailsImpl deviceInheritanceDetails = new DeviceInheritanceDetailsImpl();
    return deviceInheritanceDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Device createDevice()
  {
    DeviceImpl device = new DeviceImpl();
    return device;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DevProperty createDevProperty()
  {
    DevPropertyImpl devProperty = new DevPropertyImpl();
    return devProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PropertyType createPropertyType()
  {
    PropertyTypeImpl propertyType = new PropertyTypeImpl();
    return propertyType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AND createAND()
  {
    ANDImpl and = new ANDImpl();
    return and;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GT createGT()
  {
    GTImpl gt = new GTImpl();
    return gt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LT createLT()
  {
    LTImpl lt = new LTImpl();
    return lt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyNumber createMyNumber()
  {
    MyNumberImpl myNumber = new MyNumberImpl();
    return myNumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarRef createVarRef()
  {
    VarRefImpl varRef = new VarRefImpl();
    return varRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parenthesis createParenthesis()
  {
    ParenthesisImpl parenthesis = new ParenthesisImpl();
    return parenthesis;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SmartHomePackage getSmartHomePackage()
  {
    return (SmartHomePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SmartHomePackage getPackage()
  {
    return SmartHomePackage.eINSTANCE;
  }

} //SmartHomeFactoryImpl

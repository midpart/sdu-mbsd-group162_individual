/**
 * generated by Xtext 2.38.0
 */
package org.xtext.example.smarthome.smartHome.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.smarthome.smartHome.Device;
import org.xtext.example.smarthome.smartHome.DeviceInheritance;
import org.xtext.example.smarthome.smartHome.Property;
import org.xtext.example.smarthome.smartHome.Room;
import org.xtext.example.smarthome.smartHome.SmartHomePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Room</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.RoomImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.RoomImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.RoomImpl#getDevices <em>Devices</em>}</li>
 *   <li>{@link org.xtext.example.smarthome.smartHome.impl.RoomImpl#getDeviceInheritance <em>Device Inheritance</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RoomImpl extends MinimalEObjectImpl.Container implements Room
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<Property> properties;

  /**
   * The cached value of the '{@link #getDevices() <em>Devices</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDevices()
   * @generated
   * @ordered
   */
  protected EList<Device> devices;

  /**
   * The cached value of the '{@link #getDeviceInheritance() <em>Device Inheritance</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeviceInheritance()
   * @generated
   * @ordered
   */
  protected DeviceInheritance deviceInheritance;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RoomImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmartHomePackage.Literals.ROOM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmartHomePackage.ROOM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Property> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<Property>(Property.class, this, SmartHomePackage.ROOM__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Device> getDevices()
  {
    if (devices == null)
    {
      devices = new EObjectContainmentEList<Device>(Device.class, this, SmartHomePackage.ROOM__DEVICES);
    }
    return devices;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeviceInheritance getDeviceInheritance()
  {
    return deviceInheritance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeviceInheritance(DeviceInheritance newDeviceInheritance, NotificationChain msgs)
  {
    DeviceInheritance oldDeviceInheritance = deviceInheritance;
    deviceInheritance = newDeviceInheritance;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmartHomePackage.ROOM__DEVICE_INHERITANCE, oldDeviceInheritance, newDeviceInheritance);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeviceInheritance(DeviceInheritance newDeviceInheritance)
  {
    if (newDeviceInheritance != deviceInheritance)
    {
      NotificationChain msgs = null;
      if (deviceInheritance != null)
        msgs = ((InternalEObject)deviceInheritance).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmartHomePackage.ROOM__DEVICE_INHERITANCE, null, msgs);
      if (newDeviceInheritance != null)
        msgs = ((InternalEObject)newDeviceInheritance).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmartHomePackage.ROOM__DEVICE_INHERITANCE, null, msgs);
      msgs = basicSetDeviceInheritance(newDeviceInheritance, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmartHomePackage.ROOM__DEVICE_INHERITANCE, newDeviceInheritance, newDeviceInheritance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmartHomePackage.ROOM__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case SmartHomePackage.ROOM__DEVICES:
        return ((InternalEList<?>)getDevices()).basicRemove(otherEnd, msgs);
      case SmartHomePackage.ROOM__DEVICE_INHERITANCE:
        return basicSetDeviceInheritance(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmartHomePackage.ROOM__NAME:
        return getName();
      case SmartHomePackage.ROOM__PROPERTIES:
        return getProperties();
      case SmartHomePackage.ROOM__DEVICES:
        return getDevices();
      case SmartHomePackage.ROOM__DEVICE_INHERITANCE:
        return getDeviceInheritance();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmartHomePackage.ROOM__NAME:
        setName((String)newValue);
        return;
      case SmartHomePackage.ROOM__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends Property>)newValue);
        return;
      case SmartHomePackage.ROOM__DEVICES:
        getDevices().clear();
        getDevices().addAll((Collection<? extends Device>)newValue);
        return;
      case SmartHomePackage.ROOM__DEVICE_INHERITANCE:
        setDeviceInheritance((DeviceInheritance)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmartHomePackage.ROOM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SmartHomePackage.ROOM__PROPERTIES:
        getProperties().clear();
        return;
      case SmartHomePackage.ROOM__DEVICES:
        getDevices().clear();
        return;
      case SmartHomePackage.ROOM__DEVICE_INHERITANCE:
        setDeviceInheritance((DeviceInheritance)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmartHomePackage.ROOM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SmartHomePackage.ROOM__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case SmartHomePackage.ROOM__DEVICES:
        return devices != null && !devices.isEmpty();
      case SmartHomePackage.ROOM__DEVICE_INHERITANCE:
        return deviceInheritance != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //RoomImpl

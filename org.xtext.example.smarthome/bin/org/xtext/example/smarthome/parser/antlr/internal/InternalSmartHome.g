/*
 * generated by Xtext 2.38.0
 */
grammar InternalSmartHome;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.smarthome.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.smarthome.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.smarthome.services.SmartHomeGrammarAccess;

}

@parser::members {

 	private SmartHomeGrammarAccess grammarAccess;

    public InternalSmartHomeParser(TokenStream input, SmartHomeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Controller";
   	}

   	@Override
   	protected SmartHomeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SmartHomeController'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getSmartHomeControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getControllerAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getRoomsRoomParserRuleCall_3_0());
				}
				lv_rooms_3_0=ruleRoom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"rooms",
						lv_rooms_3_0,
						"org.xtext.example.smarthome.SmartHome.Room");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getRoomInheritanceRoomInheritanceParserRuleCall_4_0());
				}
				lv_roomInheritance_4_0=ruleRoomInheritance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					set(
						$current,
						"roomInheritance",
						lv_roomInheritance_4_0,
						"org.xtext.example.smarthome.SmartHome.RoomInheritance");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Room'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomAccess().getRoomKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='where'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomAccess().getWhereKeyword_2());
		}
		otherlv_3='properties:'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomAccess().getPropertiesKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getPropertiesPropertyParserRuleCall_4_0());
				}
				lv_properties_4_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					add(
						$current,
						"properties",
						lv_properties_4_0,
						"org.xtext.example.smarthome.SmartHome.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getDevicesDeviceParserRuleCall_5_0());
				}
				lv_devices_5_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					add(
						$current,
						"devices",
						lv_devices_5_0,
						"org.xtext.example.smarthome.SmartHome.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getDeviceInheritanceDeviceInheritanceParserRuleCall_6_0());
				}
				lv_deviceInheritance_6_0=ruleDeviceInheritance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"deviceInheritance",
						lv_deviceInheritance_6_0,
						"org.xtext.example.smarthome.SmartHome.DeviceInheritance");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRoomInheritance
entryRuleRoomInheritance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomInheritanceRule()); }
	iv_ruleRoomInheritance=ruleRoomInheritance
	{ $current=$iv_ruleRoomInheritance.current; }
	EOF;

// Rule RoomInheritance
ruleRoomInheritance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='room'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomInheritanceAccess().getRoomKeyword_0());
		}
		otherlv_1='inheritance:'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomInheritanceAccess().getInheritanceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomInheritanceAccess().getInheritancesRoomInheritanceDetailsParserRuleCall_2_0());
				}
				lv_inheritances_2_0=ruleRoomInheritanceDetails
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomInheritanceRule());
					}
					add(
						$current,
						"inheritances",
						lv_inheritances_2_0,
						"org.xtext.example.smarthome.SmartHome.RoomInheritanceDetails");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRoomInheritanceDetails
entryRuleRoomInheritanceDetails returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomInheritanceDetailsRule()); }
	iv_ruleRoomInheritanceDetails=ruleRoomInheritanceDetails
	{ $current=$iv_ruleRoomInheritanceDetails.current; }
	EOF;

// Rule RoomInheritanceDetails
ruleRoomInheritanceDetails returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomInheritanceDetailsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRoomInheritanceDetailsAccess().getRoomChildRoomCrossReference_0_0());
				}
			)
		)
		otherlv_1='extends'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomInheritanceDetailsAccess().getExtendsKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomInheritanceDetailsAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomInheritanceDetailsRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRoomInheritanceDetailsAccess().getRoomParentRoomCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeviceInheritance
entryRuleDeviceInheritance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceInheritanceRule()); }
	iv_ruleDeviceInheritance=ruleDeviceInheritance
	{ $current=$iv_ruleDeviceInheritance.current; }
	EOF;

// Rule DeviceInheritance
ruleDeviceInheritance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='device'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceInheritanceAccess().getDeviceKeyword_0());
		}
		otherlv_1='inheritance:'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceInheritanceAccess().getInheritanceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceInheritanceAccess().getInheritancesDeviceInheritanceDetailsParserRuleCall_2_0());
				}
				lv_inheritances_2_0=ruleDeviceInheritanceDetails
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceInheritanceRule());
					}
					add(
						$current,
						"inheritances",
						lv_inheritances_2_0,
						"org.xtext.example.smarthome.SmartHome.DeviceInheritanceDetails");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDeviceInheritanceDetails
entryRuleDeviceInheritanceDetails returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceInheritanceDetailsRule()); }
	iv_ruleDeviceInheritanceDetails=ruleDeviceInheritanceDetails
	{ $current=$iv_ruleDeviceInheritanceDetails.current; }
	EOF;

// Rule DeviceInheritanceDetails
ruleDeviceInheritanceDetails returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceInheritanceDetailsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceChildDeviceCrossReference_0_0());
				}
			)
		)
		otherlv_1='extends'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceInheritanceDetailsAccess().getExtendsKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceInheritanceDetailsAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceInheritanceDetailsRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDeviceInheritanceDetailsAccess().getDeviceParentDeviceCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Device'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDeviceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='where'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getWhereKeyword_2());
		}
		otherlv_3='properties:'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getPropertiesKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getPropertiesPropertyParserRuleCall_4_0());
				}
				lv_properties_4_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"properties",
						lv_properties_4_0,
						"org.xtext.example.smarthome.SmartHome.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='Actions:'
			{
				newLeafNode(otherlv_5, grammarAccess.getDeviceAccess().getActionsKeyword_5());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getActionsActionParserRuleCall_6_0());
				}
				lv_actions_6_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"actions",
						lv_actions_6_0,
						"org.xtext.example.smarthome.SmartHome.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_7='constraints:'
			{
				newLeafNode(otherlv_7, grammarAccess.getDeviceAccess().getConstraintsKeyword_7());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getExpExpParserRuleCall_8_0());
				}
				lv_exp_8_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"exp",
						lv_exp_8_0,
						"org.xtext.example.smarthome.SmartHome.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getDoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getPrTypePropertyTypeParserRuleCall_0_0());
				}
				lv_prType_0_0=rulePropertyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"prType",
						lv_prType_0_0,
						"org.xtext.example.smarthome.SmartHome.PropertyType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.smarthome.SmartHome.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpAccess().getBooleanExpParserRuleCall());
	}
	this_BooleanExp_0=ruleBooleanExp
	{
		$current = $this_BooleanExp_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBooleanExp
entryRuleBooleanExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpRule()); }
	iv_ruleBooleanExp=ruleBooleanExp
	{ $current=$iv_ruleBooleanExp.current; }
	EOF;

// Rule BooleanExp
ruleBooleanExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpAccess().getAndConditionParserRuleCall_0());
		}
		this_AndCondition_0=ruleAndCondition
		{
			$current = $this_AndCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBooleanExpAccess().getANDLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='AND'
			{
				newLeafNode(otherlv_2, grammarAccess.getBooleanExpAccess().getANDKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanExpAccess().getRightAndConditionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.smarthome.SmartHome.AndCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndCondition
entryRuleAndCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndConditionRule()); }
	iv_ruleAndCondition=ruleAndCondition
	{ $current=$iv_ruleAndCondition.current; }
	EOF;

// Rule AndCondition
ruleAndCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndConditionAccess().getAtomicParserRuleCall_0());
		}
		this_Atomic_0=ruleAtomic
		{
			$current = $this_Atomic_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAndConditionAccess().getGTLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='>'
				{
					newLeafNode(otherlv_2, grammarAccess.getAndConditionAccess().getGreaterThanSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndConditionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.smarthome.SmartHome.Atomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getAndConditionAccess().getLTLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='<'
				{
					newLeafNode(otherlv_5, grammarAccess.getAndConditionAccess().getLessThanSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAndConditionAccess().getRightAtomicParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAndConditionRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"org.xtext.example.smarthome.SmartHome.Atomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getMyNumberAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getVarRefAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getAtomicAccess().getValuePropertyCrossReference_1_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getParenthesisAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getValueParenthesisParserRuleCall_2_1_0());
					}
					lv_value_5_0=ruleParenthesis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"org.xtext.example.smarthome.SmartHome.Parenthesis");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleParenthesis
entryRuleParenthesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisRule()); }
	iv_ruleParenthesis=ruleParenthesis
	{ $current=$iv_ruleParenthesis.current; }
	EOF;

// Rule Parenthesis
ruleParenthesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1());
		}
		this_Exp_1=ruleExp
		{
			$current = $this_Exp_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='bool'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getTypeAccess().getNameBoolKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='integer'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getTypeAccess().getNameIntegerKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='double'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getTypeAccess().getNameDoubleKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='string'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getTypeAccess().getNameStringKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRulePropertyType
entryRulePropertyType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyTypeRule()); }
	iv_rulePropertyType=rulePropertyType
	{ $current=$iv_rulePropertyType.current; }
	EOF;

// Rule PropertyType
rulePropertyType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='private'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getPropertyTypeAccess().getNamePrivateKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='public'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getPropertyTypeAccess().getNamePublicKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
